name: build

permissions:
  contents: write

# on:
#   workflow_dispatch: {}
on:
  push:
    tags:
      - 'v*.*.*'

# env:
#   GITHUB_ACTIONS_RUNNER_FORCED_NODE_VERSION: '16'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [linux-aarch64]
        include:
          - build: linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive-name: todo-linux-aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      # - name: Build binary
      #   run: cargo build --verbose --release --target ${{ matrix.target }}
      #   env:
      #     RUST_BACKTRACE: 1



      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Strip binary (linux and macos)
        run: strip "target/${{ matrix.target }}/release/todo"

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          mkdir ${{ matrix.archive-name }}
          cd ${{ matrix.archive-name }}
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/todo.exe" "./"
          else
            cp "../target/${{ matrix.target }}/release/todo" "./${{ matrix.archive-name }}"
          fi


      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.archive-name }}/*

      - name: Show files
        run: |
          ls ${{ github.workspace }}/${{ matrix.archive-name }}

      - name: Download archive
        uses: actions/download-artifact@v2
        with:
          path: archive/

      - name: Show Download files
        run: |
          ls archive/artifact/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: archive/artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
